[{"content":" 1class Graph { 2 3 // inner class 4 // to keep track of edges 5 class Edge { 6 int src, dest; 7 } 8 9 // number of vertices and edges 10 int vertices, edges; 11 12 // array to store all edges 13 Edge[] edge; 14 15 Graph(int vertices, int edges) { 16 this.vertices = vertices; 17 this.edges = edges; 18 19 // initialize the edge array 20 edge = new Edge[edges]; 21 for(int i = 0; i \u0026lt; edges; i++) { 22 23 // each element of the edge array 24 // is an object of Edge type 25 edge[i] = new Edge(); 26 } 27 } 1 print(f\u0026#34;Numpy: {np.__version__}\u0026#34;) 1 2 cin \u0026gt;\u0026gt; a; cout \u0026lt;\u0026lt; a \u0026lt;\u0026lt; \u0026#34;hello\u0026#34;; 1 printf(\u0026#34;%d\u0026#34;,a); 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 class Graph { // inner class // to keep track of edges class Edge { int src, dest; } // number of vertices and edges int vertices, edges; // array to store all edges Edge[] edge; Graph(int vertices, int edges) { this.vertices = vertices; this.edges = edges; // initialize the edge array edge = new Edge[edges]; for(int i = 0; i \u0026lt; edges; i++) { // each element of the edge array // is an object of Edge type edge[i] = new Edge(); } } public static void main(String[] args) { // create an object of Graph class int noVertices = 5; int noEdges = 8; Graph g = new Graph(noVertices, noEdges); // create graph g.edge[0].src = 1; // edge 1---2 g.edge[0].dest = 2; g.edge[1].src = 1; // edge 1---3 g.edge[1].dest = 3; g.edge[2].src = 1; // edge 1---4 g.edge[2].dest = 4; g.edge[3].src = 2; // edge 2---4 g.edge[3].dest = 4; g.edge[4].src = 2; // edge 2---5 g.edge[4].dest = 5; g.edge[5].src = 3; // edge 3---4 g.edge[5].dest = 4; g.edge[6].src = 3; // edge 3---5 g.edge[6].dest = 5; g.edge[7].src = 4; // edge 4---5 g.edge[7].dest = 5; // print graph for(int i = 0; i \u0026lt; noEdges; i++) { System.out.println(g.edge[i].src + \u0026#34; - \u0026#34; + g.edge[i].dest); } } } ","permalink":"https://decodeai.in/posts/test-post/testing/","summary":"1class Graph { 2 3 // inner class 4 // to keep track of edges 5 class Edge { 6 int src, dest; 7 } 8 9 // number of vertices and edges 10 int vertices, edges; 11 12 // array to store all edges 13 Edge[] edge; 14 15 Graph(int vertices, int edges) { 16 this.vertices = vertices; 17 this.edges = edges; 18 19 // initialize the edge array 20 edge = new Edge[edges]; 21 for(int i = 0; i \u0026lt; edges; i++) { 22 23 // each element of the edge array 24 // is an object of Edge type 25 edge[i] = new Edge(); 26 } 27 } 1 print(f\u0026#34;Numpy: {np.","title":"Testing"},{"content":"hello\n1 some code 1 2 # some code echo \u0026#34;Hello world\u0026#34; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 class Graph { // inner class // to keep track of edges class Edge { int src, dest; } // number of vertices and edges int vertices, edges; // array to store all edges Edge[] edge; Graph(int vertices, int edges) { this.vertices = vertices; this.edges = edges; // initialize the edge array edge = new Edge[edges]; for(int i = 0; i \u0026lt; edges; i++) { // each element of the edge array // is an object of Edge type edge[i] = new Edge(); } } public static void main(String[] args) { // create an object of Graph class int noVertices = 5; int noEdges = 8; Graph g = new Graph(noVertices, noEdges); // create graph g.edge[0].src = 1; // edge 1---2 g.edge[0].dest = 2; g.edge[1].src = 1; // edge 1---3 g.edge[1].dest = 3; g.edge[2].src = 1; // edge 1---4 g.edge[2].dest = 4; g.edge[3].src = 2; // edge 2---4 g.edge[3].dest = 4; g.edge[4].src = 2; // edge 2---5 g.edge[4].dest = 5; g.edge[5].src = 3; // edge 3---4 g.edge[5].dest = 4; g.edge[6].src = 3; // edge 3---5 g.edge[6].dest = 5; g.edge[7].src = 4; // edge 4---5 g.edge[7].dest = 5; // print graph for(int i = 0; i \u0026lt; noEdges; i++) { System.out.println(g.edge[i].src + \u0026#34; - \u0026#34; + g.edge[i].dest); } } } 1 2 3 function addOne(number) { return number + 1; } 1 2 # some code echo \u0026#34;Hello World\u0026#34; ","permalink":"https://decodeai.in/posts/test-post/arch/","summary":"hello\n1 some code 1 2 # some code echo \u0026#34;Hello world\u0026#34; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 class Graph { // inner class // to keep track of edges class Edge { int src, dest; } // number of vertices and edges int vertices, edges; // array to store all edges Edge[] edge; Graph(int vertices, int edges) { this.","title":"Arch"},{"content":"Mongo DB organize It’s hard to imagine anyone who wouldn’t benefit from having a website! You might need to display your portfolio for potential clients or employers. You might need to organize your projects in a way that you can share. You may want to create a blog about the things you’re doing or the places you’ve been. You might need to advertise yourself or your business or sell a product. Whatever your reason, there’s a good chance that you want to put something together without spending a ton of time on it. There’s an even better chance that you don’t want to spend a lot of money.\nA website is a way to connect with the world and it’s a powerful tool for communication. It’s a way to share your work, your interests, and your passions. It’s how you can create, build, and control your online image. Plus, the sooner you build your site, the more time you’ll have to build your online presence and reach the people that you want to reach. It can help you stand out in a sea of competitors. It’s also not the easiest thing to create if you don’t know what you’re doing! There are a few ways that a beginner can create a simple and completely free website. The main ones are GitHub and Wordpress.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #include \u0026lt;stdio.h\u0026gt; int main() { int i, space, rows, k = 0; printf(\u0026#34;Enter the number of rows: \u0026#34;); scanf(\u0026#34;%d\u0026#34;, \u0026amp;rows); for (i = 1; i \u0026lt;= rows; ++i, k = 0) { for (space = 1; space \u0026lt;= rows - i; ++space) { printf(\u0026#34; \u0026#34;); } while (k != 2 * i - 1) { printf(\u0026#34;* \u0026#34;); ++k; } printf(\u0026#34;\\n\u0026#34;); } return 0; } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #include \u0026lt;stdio.h\u0026gt; int main() { int i, space, rows, k = 0; printf(\u0026#34;Enter the number of rows: \u0026#34;); scanf(\u0026#34;%d\u0026#34;, \u0026amp;rows); for (i = 1; i \u0026lt;= rows; ++i, k = 0) { for (space = 1; space \u0026lt;= rows - i; ++space) { printf(\u0026#34; \u0026#34;); } while (k != 2 * i - 1) { printf(\u0026#34;* \u0026#34;); ++k; } printf(\u0026#34;\\n\u0026#34;); } return 0; } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #include \u0026lt;stdio.h\u0026gt; int main() { int i, space, rows, k = 0; printf(\u0026#34;Enter the number of rows: \u0026#34;); scanf(\u0026#34;%d\u0026#34;, \u0026amp;rows); for (i = 1; i \u0026lt;= rows; ++i, k = 0) { for (space = 1; space \u0026lt;= rows - i; ++space) { printf(\u0026#34; \u0026#34;); } while (k != 2 * i - 1) { printf(\u0026#34;* \u0026#34;); ++k; } printf(\u0026#34;\\n\u0026#34;); } return 0; } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #include \u0026lt;stdio.h\u0026gt; int main() { int i, space, rows, k = 0; printf(\u0026#34;Enter the number of rows: \u0026#34;); scanf(\u0026#34;%d\u0026#34;, \u0026amp;rows); for (i = 1; i \u0026lt;= rows; ++i, k = 0) { for (space = 1; space \u0026lt;= rows - i; ++space) { printf(\u0026#34; \u0026#34;); } while (k != 2 * i - 1) { printf(\u0026#34;* \u0026#34;); ++k; } printf(\u0026#34;\\n\u0026#34;); } return 0; } code practise CI/CD Pipeline Github CI/CD Pipeline\nHow to Setup a CI/CD Pipeline with GitHub Actions and AWS\nCI/CD Continuous integration\nAutomate to run builds, tests and integrate into code branch(github).\nContinuous delivery\nAutomate to deploy our code to UAT then manually triggered to AWS\nContinuous Deployment\nAutomate to deploy our code to UAT(User Acceptance Testing) to AWS ","permalink":"https://decodeai.in/posts/mongodb/mongodb/","summary":"Mongo DB organize It’s hard to imagine anyone who wouldn’t benefit from having a website! You might need to display your portfolio for potential clients or employers. You might need to organize your projects in a way that you can share. You may want to create a blog about the things you’re doing or the places you’ve been. You might need to advertise yourself or your business or sell a product.","title":"MongoDB"}]